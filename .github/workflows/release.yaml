name: Release
on:
  push:
    branches:
      - "main"
  workflow_dispatch:
jobs:
    Release:
        runs-on: ubuntu-latest
        concurrency: release
        steps:
        - uses: actions/checkout@v4.1.1

        - name: Setup nodejs
          uses: actions/setup-node@v4
          with:
            node-version: 20.x

        - name: Get package version to VERSION env
          run: node -p "'VERSION=' + require('./package.json').version" >> $GITHUB_ENV

        - uses: mukunku/tag-exists-action@v1.6.0
          id: checkReleaseExists
          with: 
            tag: v${{ env.VERSION }}

        - name: Install deps
          if: steps.checkReleaseExists.outputs.exists == 'false'
          run: npm ci

        - name: Build wasm
          if: steps.checkReleaseExists.outputs.exists == 'false'
          run: npm run build-wasm

        - name: Build package
          if: steps.checkReleaseExists.outputs.exists == 'false'
          run: npm run build

        - name: Pack package
          if: steps.checkReleaseExists.outputs.exists == 'false'
          run: npm pack

        - uses: "marvinpinto/action-automatic-releases@v1.2.1"
          if: steps.checkReleaseExists.outputs.exists == 'false'
          with:
            title: brotli-ts v${{ env.VERSION }}
            automatic_release_tag: v${{ env.VERSION }}
            prerelease: false
            draft: false 
            files: |
              brotli-ts-${{ env.VERSION }}.tgz
            repo_token: "${{ secrets.GITHUB_TOKEN }}"

        - name: Publish npm
          if: steps.checkReleaseExists.outputs.exists == 'false'
          run: |
            set -e
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
            npm publish brotli-ts-${{ env.VERSION }}.tgz
          env:
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
